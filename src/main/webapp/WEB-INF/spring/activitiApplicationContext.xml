<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/aop 
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
          http://www.springframework.org/schema/context 
          http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/tx 
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
	<context:annotation-config />
	<context:component-scan
		base-package="org.crusoe.myauth.*,org.crusoe.myauth.service.*,org.crusoe.myauth.service.impl.*" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">

		<property name="persistenceUnitManager" ref="persistenceUnitManager" />
		<property name="jpaDialect" ref="jpaDialect" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
			</props>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="dataSource" /> </bean> -->
	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
	<bean id="persistenceUnitManager"
		class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="persistenceXmlLocations">
			<list>
				<value>classpath:META-INF/persistence.xml</value>
			</list>
		</property>
		<property name="dataSources">
			<map>
				<entry key="dataSource" value-ref="dataSource" />
			</map>
		</property>
	</bean>
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<property name="targetDataSource" ref="jdbcdataSource" />
	</bean>

	<bean id="jdbcdataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/activitidb?relaxAutoCommit=true" />
		<property name="username" value="root" />
		<property name="password" value="tomtom1982" />

	</bean>



	<!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" 
		p:location="classpath:hibernate.properties" p:ignoreUnresolvablePlaceholders="true" 
		/> <bean id="springHelper" class="org.jbpm.pvm.internal.processengine.SpringHelper" 
		/> <bean id="processEngine" factory-bean="springHelper" factory-method="createProcessEngine" 
		/> <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource" /> <property name="mappingResources"> 
		<list> <value>jbpm.repository.hbm.xml</value> <value>jbpm.execution.hbm.xml</value> 
		<value>jbpm.history.hbm.xml</value> <value>jbpm.task.hbm.xml</value> <value>jbpm.identity.hbm.xml</value> 
		</list> </property> <property name="hibernateProperties"> <props> <prop key="hibernate.dialect">${dataSource.dialect}</prop> 
		<prop key="hibernate.hbm2ddl.auto">${dataSource.hbm2ddl.auto}</prop> <prop 
		key="hibernate.cache.use_query_cache">true</prop> <prop key="hibernate.cache.use_second_level_cache">true</prop> 
		<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop> 
		</props> </property> <property name="packagesToScan"> <list> <value>org.myjbpm.myauth.model</value> 
		</list> </property> </bean> <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"> 
		<property name="sessionFactory" ref="sessionFactory" /> <property name="dataSource" 
		ref="dataSource" /> </bean> <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="${dataSource.driverClassName}" /> 
		<property name="url" value="${dataSource.url}" /> <property name="username" 
		value="${dataSource.username}" /> <property name="password" value="${dataSource.password}" 
		/> </bean> <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate"> 
		<property name="sessionFactory" ref="sessionFactory" /> </bean> -->

	<bean id="genericEntityDao" class="org.crusoe.myauth.dao.JPAGenericEntityDao"
		scope="prototype" lazy-init="true">
		<property name="entityManagerFactory">
			<ref bean="entityManagerFactory" />
		</property>
	</bean>



	<bean id="userDao" parent="genericEntityDao">
		<constructor-arg>
			<!--根据这个生成某一个实体的dao -->
			<value>org.crusoe.myauth.model.UserInfo</value>
		</constructor-arg>
	</bean>

	<bean id="roleDao" parent="genericEntityDao">
		<constructor-arg>
			<!--根据这个生成某一个实体的dao -->
			<value>org.crusoe.myauth.model.RoleInfo</value>
		</constructor-arg>
	</bean>

	<bean id="resourceDao" parent="genericEntityDao">
		<constructor-arg>
			<!--根据这个生成某一个实体的dao -->
			<value>org.crusoe.myauth.model.ResourceInfo</value>
		</constructor-arg>
	</bean>


	<bean
		class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />



</beans>