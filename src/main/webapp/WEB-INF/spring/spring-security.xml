<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                  http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context-3.0.xsd  
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security-3.0.xsd">
	<context:component-scan base-package="org.crusoe.myauth" />


	<security:http auto-config='true'>
		<security:intercept-url pattern="/scripts/**"
			filters="none" />
		<security:intercept-url pattern="/styles/**"
			filters="none" />
		<security:intercept-url pattern="/images/**"
			filters="none" />
		<security:intercept-url pattern="/themes/**"
			filters="none" />

		<security:intercept-url pattern="/css/**"
			filters="none" />

		<security:intercept-url pattern="/account/**"
			access="ROLE_USER" />
		<security:intercept-url pattern="/**"
			access="IS_AUTHENTICATED_ANONYMOUSLY" />

		<security:anonymous />

		<security:form-login />
		<security:logout />
		<security:remember-me />
		<security:custom-filter ref="myFilter"
			before="FILTER_SECURITY_INTERCEPTOR" />

	</security:http>
	<bean id="myFilter" class="org.crusoe.myauth.filter.MySecurityInterceptor">
		<property name="authenticationManager" ref="myAuthenticationManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager"></property>
		<property name="securityMetadataSource" ref="mySecurityMetadataSource"></property>

		<property name="afterInvocationManager">
			<ref local="afterInvocationManager" />
		</property>
	</bean>


	<security:global-method-security
		secured-annotations="enabled" jsr250-annotations="enabled"
		access-decision-manager-ref="aclAccessDecisionManager">

	</security:global-method-security>

	<security:authentication-manager alias="myAuthenticationManager">

		<security:authentication-provider
			user-service-ref="myUserDetailsService">

			<!-- <security:user-service> <security:user name="jimi" password="jimispassword" 
				authorities="ROLE_USER, ROLE_ADMIN" /> <security:user name="bob" password="bobspassword" 
				authorities="ROLE_USER" /> </security:user-service> -->
		</security:authentication-provider>
	</security:authentication-manager>


	<bean id="aclAccessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<ref local="aclObjectReadVoter" />
			</list>
		</property>
	</bean>
	<bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.access.vote.RoleVoter" />
			</list>
		</property>
	</bean>


	<!-- ========= ACL SERVICE DEFINITIONS ========= -->

	<bean id="aclCache"
		class="org.springframework.security.acls.domain.EhCacheBasedAclCache">
		<constructor-arg>
			<bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
				<property name="cacheManager">
					<bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" />
				</property>
				<property name="cacheName" value="aclCache" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="lookupStrategy"
		class="org.springframework.security.acls.jdbc.BasicLookupStrategy">
		<constructor-arg ref="dataSource" />
		<constructor-arg ref="aclCache" />
		<constructor-arg>
			<bean
				class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl">
				<constructor-arg>
					<list>
						<bean
							class="org.springframework.security.core.authority.GrantedAuthorityImpl">
							<constructor-arg value="ROLE_ADMINISTRATOR" />
						</bean>
						<bean
							class="org.springframework.security.core.authority.GrantedAuthorityImpl">
							<constructor-arg value="ROLE_ADMINISTRATOR" />
						</bean>
						<bean
							class="org.springframework.security.core.authority.GrantedAuthorityImpl">
							<constructor-arg value="ROLE_ADMINISTRATOR" />
						</bean>
					</list>
				</constructor-arg>
			</bean>
		</constructor-arg>
		<constructor-arg>
			<bean class="org.springframework.security.acls.domain.ConsoleAuditLogger" />
		</constructor-arg>
	</bean>

	<bean id="mutableAclService"
		class="org.springframework.security.acls.jdbc.JdbcMutableAclService">
		<constructor-arg ref="dataSource" />
		<constructor-arg ref="lookupStrategy" />
		<constructor-arg ref="aclCache" />
		<property name="classIdentityQuery" value="SELECT @@IDENTITY" />
		<property name="sidIdentityQuery" value="SELECT @@IDENTITY" />
	</bean>
	<bean id="afterInvocationManager"
		class="org.springframework.security.access.intercept.AfterInvocationProviderManager">
		<property name="providers">
			<list>
				<ref local="afterAclRead" />
				<ref local="afterAclCollectionRead" />
			</list>
		</property>
	</bean>

	<bean id="afterAclRead"
		class="org.springframework.security.acls.afterinvocation.AclEntryAfterInvocationProvider">
		<constructor-arg ref="mutableAclService" />
		<constructor-arg>
			<list>
				<ref local="administrationPermission" />
				<ref local="readPermission" />

			</list>
		</constructor-arg>
	</bean>
	<bean id="afterAclCollectionRead"
		class="org.springframework.security.acls.afterinvocation.AclEntryAfterInvocationCollectionFilteringProvider">
		<constructor-arg ref="mutableAclService" />
		<constructor-arg>
			<list>
				<ref local="administrationPermission" />
				<ref local="readPermission" />
			</list>
		</constructor-arg>
	</bean>

	<bean id="administrationPermission"
		class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
		<property name="staticField"
			value="org.springframework.security.acls.domain.BasePermission.ADMINISTRATION" />
	</bean>

	<bean id="readPermission"
		class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
		<property name="staticField"
			value="org.springframework.security.acls.domain.BasePermission.READ" />
	</bean>

	<bean id="writePermission"
		class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
		<property name="staticField"
			value="org.springframework.security.acls.domain.BasePermission.WRITE" />
	</bean>

	<bean id="deletePermission"
		class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
		<property name="staticField"
			value="org.springframework.security.acls.domain.BasePermission.DELETE" />
	</bean>

	<bean id="aclObjectReadVoter" class="org.springframework.security.acls.AclEntryVoter">
		<constructor-arg ref="mutableAclService" />
		<constructor-arg value="ACL_OBJECT_READ" />
		<constructor-arg>
			<list>
				<ref local="administrationPermission" />
				<ref local="readPermission" />
			</list>
		</constructor-arg>
		<property name="processDomainObjectClass" value="org.crusoe.myauth.model.AbstractSecureObject" />
	</bean>
</beans>
